[gd_resource type="VisualShader" load_steps=43 format=2]

[ext_resource path="res://assets/textures/noise-texture.png" type="Texture" id=1]

[sub_resource type="VisualShaderNodeVec3Constant" id=9]
constant = Vector3( 0.2, 1, 0 )

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=12]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=13]
uniform_name = "noise_speed"

[sub_resource type="VisualShaderNodeVec3Uniform" id=14]
uniform_name = "noise_tiling"

[sub_resource type="VisualShaderNodeVectorOp" id=15]
operator = 1

[sub_resource type="VisualShaderNodeInput" id=16]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=17]

[sub_resource type="VisualShaderNodeTexture" id=1]
output_port_for_preview = 0
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeScalarOp" id=20]
output_port_for_preview = 0
default_input_values = [ 0, 0.0, 1, 2.0 ]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=21]
uniform_name = "thrust"

[sub_resource type="VisualShaderNodeVectorOp" id=22]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=23]

[sub_resource type="VisualShaderNodeVectorScalarMix" id=24]
output_port_for_preview = 0

[sub_resource type="VisualShaderNodeInput" id=2]
input_name = "uv"

[sub_resource type="VisualShaderNodeColorUniform" id=27]
uniform_name = "FlameColorB"

[sub_resource type="VisualShaderNodeColorUniform" id=28]
uniform_name = "FlameColorA"

[sub_resource type="VisualShaderNodeScalarFunc" id=29]
function = 31

[sub_resource type="VisualShaderNodeScalarFunc" id=30]
output_port_for_preview = 0
function = 18

[sub_resource type="VisualShaderNodeVectorOp" id=3]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=6]

[sub_resource type="VisualShaderNodeScalarOp" id=39]
operator = 2

[sub_resource type="VisualShaderNodeScalarUniform" id=40]
uniform_name = "jiggle_strength"

[sub_resource type="VisualShaderNodeInput" id=41]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorOp" id=42]

[sub_resource type="VisualShaderNodeScalarOp" id=43]
default_input_values = [ 0, 0.0, 1, 0.02 ]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=44]
input_name = "time"

[sub_resource type="VisualShaderNodeVec3Constant" id=45]
constant = Vector3( 0, -1.4, 0 )

[sub_resource type="VisualShaderNodeVectorOp" id=46]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=47]

[sub_resource type="VisualShaderNodeInput" id=31]
input_name = "uv"

[sub_resource type="VisualShaderNodeInput" id=48]
input_name = "vertex"

[sub_resource type="VisualShaderNodeVectorScalarMix" id=49]

[sub_resource type="VisualShaderNodeScalarUniform" id=50]
uniform_name = "use_jiggle"

[sub_resource type="VisualShaderNodeVectorDecompose" id=32]

[sub_resource type="VisualShaderNodeScalarOp" id=33]
operator = 2

[sub_resource type="VisualShaderNodeScalarFunc" id=35]
function = 17

[sub_resource type="VisualShaderNodeScalarOp" id=36]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=37]
input_name = "normal"

[sub_resource type="VisualShaderNodeScalarConstant" id=38]
constant = 4.0

[resource]
code = "shader_type spatial;
render_mode cull_front, specular_schlick_ggx;

uniform float jiggle_strength;
uniform float use_jiggle;
uniform vec3 noise_tiling;
uniform float noise_speed;
uniform float thrust;
uniform sampler2D tex_frg_2;
uniform vec4 FlameColorB : hint_color;
uniform vec4 FlameColorA : hint_color;



void vertex() {
// Input:21
	vec3 n_out21p0 = VERTEX;

// Input:12
	vec3 n_out12p0 = VERTEX;

// Input:2
	vec3 n_out2p0 = vec3(UV, 0.0);

// Input:15
	float n_out15p0 = TIME;

// Vector:17
	vec3 n_out17p0 = vec3(0.000000, -1.400000, 0.000000);

// VectorOp:18
	vec3 n_out18p0 = vec3(n_out15p0) * n_out17p0;

// VectorOp:19
	vec3 n_out19p0 = n_out2p0 + n_out18p0;

// VectorDecompose:3
	float n_out3p0 = n_out19p0.x;
	float n_out3p1 = n_out19p0.y;
	float n_out3p2 = n_out19p0.z;

// Scalar:9
	float n_out9p0 = 4.000000;

// ScalarOp:4
	float n_out4p0 = n_out3p1 * n_out9p0;

// ScalarFunc:6
	float n_out6p0 = fract(n_out4p0);

// Input:8
	vec3 n_out8p0 = NORMAL;

// ScalarOp:7
	float n_out7p0 = n_out6p0 * dot(n_out8p0, vec3(0.333333, 0.333333, 0.333333));

// ScalarUniform:11
	float n_out11p0 = jiggle_strength;

// ScalarOp:14
	float n_in14p1 = 0.02000;
	float n_out14p0 = n_out11p0 * n_in14p1;

// ScalarOp:10
	float n_out10p0 = n_out7p0 * n_out14p0;

// VectorOp:13
	vec3 n_out13p0 = n_out12p0 + vec3(n_out10p0);

// ScalarUniform:23
	float n_out23p0 = use_jiggle;

// VectorScalarMix:22
	vec3 n_out22p0 = mix(n_out21p0, n_out13p0, n_out23p0);

// Output:0
	VERTEX = n_out22p0;

}

void fragment() {
// Input:3
	vec3 n_out3p0 = vec3(UV, 0.0);

// VectorUniform:15
	vec3 n_out15p0 = noise_tiling;

// VectorOp:4
	vec3 n_out4p0 = n_out3p0 * n_out15p0;

// Vector:10
	vec3 n_out10p0 = vec3(0.200000, 1.000000, 0.000000);

// Input:12
	float n_out12p0 = TIME;

// ScalarUniform:14
	float n_out14p0 = noise_speed;

// ScalarUniform:23
	float n_out23p0 = thrust;

// VectorOp:24
	vec3 n_out24p0 = vec3(n_out14p0) * vec3(n_out23p0);

// VectorOp:13
	vec3 n_out13p0 = vec3(n_out12p0) * n_out24p0;

// VectorOp:11
	vec3 n_out11p0 = n_out10p0 * n_out13p0;

// VectorOp:7
	vec3 n_out7p0 = n_out4p0 + n_out11p0;

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, n_out7p0.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Input:17
	vec3 n_out17p0 = vec3(UV, 0.0);

// VectorDecompose:19
	float n_out19p0 = n_out17p0.x;
	float n_out19p1 = n_out17p0.y;
	float n_out19p2 = n_out17p0.z;

// ScalarFunc:32
	float n_out32p0 = 1.0 - n_out23p0;

// VectorOp:16
	vec3 n_out16p0 = vec3(n_out19p1) - vec3(n_out32p0);

// ScalarOp:22
	float n_in22p1 = 2.00000;
	float n_out22p0 = dot(n_out16p0, vec3(0.333333, 0.333333, 0.333333)) * n_in22p1;

// VectorOp:25
	vec3 n_out25p0 = vec3(n_out2p1) + vec3(n_out22p0);

// ScalarFunc:33
	float n_out33p0 = min(max(dot(n_out25p0, vec3(0.333333, 0.333333, 0.333333)), 0.0), 1.0);

// ColorUniform:30
	vec3 n_out30p0 = FlameColorB.rgb;
	float n_out30p1 = FlameColorB.a;

// ColorUniform:31
	vec3 n_out31p0 = FlameColorA.rgb;
	float n_out31p1 = FlameColorA.a;

// VectorScalarMix:27
	vec3 n_out27p0 = mix(n_out30p0, n_out31p0, n_out22p0);

// Output:0
	ALPHA = n_out33p0;
	EMISSION = n_out27p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( 42.3458, 453.713 )
modes/cull = 1
nodes/vertex/0/position = Vector2( 940, 40 )
nodes/vertex/2/node = SubResource( 31 )
nodes/vertex/2/position = Vector2( -1360, 80 )
nodes/vertex/3/node = SubResource( 32 )
nodes/vertex/3/position = Vector2( -960, 80 )
nodes/vertex/4/node = SubResource( 33 )
nodes/vertex/4/position = Vector2( -740, 120 )
nodes/vertex/6/node = SubResource( 35 )
nodes/vertex/6/position = Vector2( -520, 140 )
nodes/vertex/7/node = SubResource( 36 )
nodes/vertex/7/position = Vector2( -269.891, 162.199 )
nodes/vertex/8/node = SubResource( 37 )
nodes/vertex/8/position = Vector2( -460, 240 )
nodes/vertex/9/node = SubResource( 38 )
nodes/vertex/9/position = Vector2( -920, 200 )
nodes/vertex/10/node = SubResource( 39 )
nodes/vertex/10/position = Vector2( 40, 160 )
nodes/vertex/11/node = SubResource( 40 )
nodes/vertex/11/position = Vector2( -360, 340 )
nodes/vertex/12/node = SubResource( 41 )
nodes/vertex/12/position = Vector2( 40, 60 )
nodes/vertex/13/node = SubResource( 42 )
nodes/vertex/13/position = Vector2( 280, 100 )
nodes/vertex/14/node = SubResource( 43 )
nodes/vertex/14/position = Vector2( -160, 280 )
nodes/vertex/15/node = SubResource( 44 )
nodes/vertex/15/position = Vector2( -1580, 180 )
nodes/vertex/17/node = SubResource( 45 )
nodes/vertex/17/position = Vector2( -1740, 280 )
nodes/vertex/18/node = SubResource( 46 )
nodes/vertex/18/position = Vector2( -1400, 220 )
nodes/vertex/19/node = SubResource( 47 )
nodes/vertex/19/position = Vector2( -1160, 100 )
nodes/vertex/21/node = SubResource( 48 )
nodes/vertex/21/position = Vector2( 280, -20 )
nodes/vertex/22/node = SubResource( 49 )
nodes/vertex/22/position = Vector2( 580, 80 )
nodes/vertex/23/node = SubResource( 50 )
nodes/vertex/23/position = Vector2( 280, 240 )
nodes/vertex/connections = PoolIntArray( 4, 0, 6, 0, 6, 0, 7, 0, 8, 0, 7, 1, 9, 0, 4, 1, 7, 0, 10, 0, 12, 0, 13, 0, 10, 0, 13, 1, 3, 1, 4, 0, 11, 0, 14, 0, 15, 0, 18, 0, 17, 0, 18, 1, 2, 0, 19, 0, 18, 0, 19, 1, 19, 0, 3, 0, 14, 0, 10, 1, 21, 0, 22, 0, 13, 0, 22, 1, 23, 0, 22, 2, 22, 0, 0, 0, 4, 0, 6, 0, 6, 0, 7, 0, 8, 0, 7, 1, 9, 0, 4, 1, 7, 0, 10, 0, 12, 0, 13, 0, 10, 0, 13, 1, 3, 1, 4, 0, 11, 0, 14, 0, 15, 0, 18, 0, 17, 0, 18, 1, 2, 0, 19, 0, 18, 0, 19, 1, 19, 0, 3, 0, 14, 0, 10, 1, 21, 0, 22, 0, 13, 0, 22, 1, 23, 0, 22, 2, 22, 0, 0, 0 )
nodes/fragment/0/position = Vector2( 1000, 540 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( 100, 180 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -580, 20 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -320, 40 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( -100, 140 )
nodes/fragment/10/node = SubResource( 9 )
nodes/fragment/10/position = Vector2( -680, 200 )
nodes/fragment/11/node = SubResource( 10 )
nodes/fragment/11/position = Vector2( -300, 240 )
nodes/fragment/12/node = SubResource( 11 )
nodes/fragment/12/position = Vector2( -760, 320 )
nodes/fragment/13/node = SubResource( 12 )
nodes/fragment/13/position = Vector2( -500, 300 )
nodes/fragment/14/node = SubResource( 13 )
nodes/fragment/14/position = Vector2( -920, 400 )
nodes/fragment/15/node = SubResource( 14 )
nodes/fragment/15/position = Vector2( -600, 120 )
nodes/fragment/16/node = SubResource( 15 )
nodes/fragment/16/position = Vector2( -200, 660 )
nodes/fragment/17/node = SubResource( 16 )
nodes/fragment/17/position = Vector2( -640, 660 )
nodes/fragment/19/node = SubResource( 17 )
nodes/fragment/19/position = Vector2( -440, 620 )
nodes/fragment/22/node = SubResource( 20 )
nodes/fragment/22/position = Vector2( 20, 600 )
nodes/fragment/23/node = SubResource( 21 )
nodes/fragment/23/position = Vector2( -920, 480 )
nodes/fragment/24/node = SubResource( 22 )
nodes/fragment/24/position = Vector2( -700, 420 )
nodes/fragment/25/node = SubResource( 23 )
nodes/fragment/25/position = Vector2( 340, 460 )
nodes/fragment/27/node = SubResource( 24 )
nodes/fragment/27/position = Vector2( 540, 720 )
nodes/fragment/30/node = SubResource( 27 )
nodes/fragment/30/position = Vector2( 320, 680 )
nodes/fragment/31/node = SubResource( 28 )
nodes/fragment/31/position = Vector2( 320, 820 )
nodes/fragment/32/node = SubResource( 29 )
nodes/fragment/32/position = Vector2( -652.838, 548.684 )
nodes/fragment/33/node = SubResource( 30 )
nodes/fragment/33/position = Vector2( 560, 480 )
nodes/fragment/connections = PoolIntArray( 7, 0, 2, 0, 11, 0, 7, 1, 4, 0, 7, 0, 10, 0, 11, 0, 13, 0, 11, 1, 12, 0, 13, 0, 3, 0, 4, 0, 15, 0, 4, 1, 17, 0, 19, 0, 14, 0, 24, 0, 24, 0, 13, 1, 23, 0, 24, 1, 2, 1, 25, 0, 22, 0, 25, 1, 16, 0, 22, 0, 22, 0, 27, 2, 27, 0, 0, 5, 30, 0, 27, 0, 31, 0, 27, 1, 23, 0, 32, 0, 32, 0, 16, 1, 19, 1, 16, 0, 25, 0, 33, 0, 33, 0, 0, 1, 7, 0, 2, 0, 11, 0, 7, 1, 4, 0, 7, 0, 10, 0, 11, 0, 13, 0, 11, 1, 12, 0, 13, 0, 3, 0, 4, 0, 15, 0, 4, 1, 17, 0, 19, 0, 14, 0, 24, 0, 24, 0, 13, 1, 23, 0, 24, 1, 2, 1, 25, 0, 22, 0, 25, 1, 16, 0, 22, 0, 22, 0, 27, 2, 27, 0, 0, 5, 30, 0, 27, 0, 31, 0, 27, 1, 23, 0, 32, 0, 32, 0, 16, 1, 19, 1, 16, 0, 25, 0, 33, 0, 33, 0, 0, 1 )
